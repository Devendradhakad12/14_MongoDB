sudo brew services start mongodb-community@6.2
BSON data
Binary json


Document : mongo stores data in form of documents (BSON docs)
Collection : MongoDB stores documents in collections.

------- commands --------------

ğŸ”¸mongosh ğŸš€ to start

ğŸ”¸use collage ğŸš€ to create & use a new database called "collage"

ğŸ”¸db.student.insertOne({name:"dev",mark:50}) ğŸš€ create collection student and insert data into student.

ğŸ”¸db.student.insertMany([{name:"pavan",mark:80},{name:"ajay",mark:90}]) ğŸš€ insert multiple data into student.

ğŸ”¸db.student.updateOne() ğŸš€ insert multiple data into student.

ğŸ”¸show collections ğŸš€ to show collections

ğŸ”¸db.student.find() ğŸš€ to find data from student collection

ğŸ”¸db.student.find({name:"pavan"}) ğŸš€ to find for specific queries

ğŸ”¸db.student.findOne({name:"pavan"}) ğŸš€  queries its return first match

ğŸ”¸db.student.find({mark:{$gt:75}}) ğŸš€  find student where marks > 75

ğŸ”¸db.student.find({mark:{$gte:75}}) ğŸš€  find student where marks >= 75

ğŸ”¸db.student.find({name:{$in:["pavan","ajay"]}}) ğŸš€  find student whose names is pavan and ajay

ğŸ”¸db.student.find({$or:[{mark:{$gte:85}},{name:{$in:["pev","ajay"]}}]}) ğŸš€    student who scored >75 or name is pev and ajay

ğŸ”¸db.student.updateOne({name:"ajay"},{$set:{mark:99}}) ğŸš€  updates at most a single document thar match a specified even though muliple documents many match the specified filter

ğŸ”¸db.student.updateMany({name:"ajay"},{$set:{mark:99}}) ğŸš€  updates at most a many document thar match a specified even though muliple documents many match the specified filter

ğŸ”¸db.student.replaceOne({name:"ajay"},{name:"aju",city:"mandsaur",mark:58}) ğŸš€  updates at most a many document thar match a specified even though muliple documents many match the specified filter

ğŸ”¸db.student.insertOne({name:"tony",performace:{mark:45,grade:"A"}}) ğŸš€ insert nested data

ğŸ”¸db.student.find({"performace.mark":45}) ğŸš€ find nested data

ğŸ”¸db.student.deleteOne({name:"ajay"})

ğŸ”¸db.student.deleteMany({name:"ajay"})

ğŸ”¸db.dropDatabase()

 


